{
  "name": "ebis-nodejs",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "dev": "node -r ts-node/register -r tsconfig-paths/register --watch src/index.ts",
    "test": "jest",
    "test-all-get-tasks": "jest tests/index.test.ts -t 'GET /tasks'",
    "test-get-tasks": "jest tests/index.test.ts -t 'should find'",
    "test-get-tasks-done tasks": "jest tests/index.test.ts -t 'should find - done tasks'",
    "test-get-tasks-not-done-tasks": "jest tests/index.test.ts -t 'should find - not done tasks'",
    "test-get-tasks-not-done-bad-string": "jest tests/index.test.ts -t 'should find - not done bad string'",
    "test-get-tasks-no-match": "jest tests/index.test.ts -t 'should find - no match'",
    "test-get-tasks-index-and-done": "jest tests/index.test.ts -t 'should find - index and done'",
    "test-get-tasks-by-name": "jest tests/index.test.ts -t 'should find - by name'",
    "test-get-tasks-by-description": "jest tests/index.test.ts -t 'should find - by description'",
    "test-get-tasks-by-indexes": "jest tests/index.test.ts -t 'should find - by indexes'",
    "test-get-tasks-param-index": "jest tests/index.test.ts -t 'should return only the indexed task'",
    "test-get-tasks-param-index-404": "jest tests/index.test.ts -t 'should return 404'",
    "test-post-tasks": "jest tests/index.test.ts -t 'POST /tasks'",
    "test-post-task-name-only": "jest tests/index.test.ts -t 'should create new task with just a name'",
    "test-post-task-name-and-done": "jest tests/index.test.ts -t 'should create new task with name and done'",
    "test-post-task-name-and-description": "jest tests/index.test.ts -t 'should create new task with name and description'",
    "test-post-task-all-fields": "jest tests/index.test.ts -t 'should create new task with all fields'",
    "test-post-task-fail-empty-name": "jest tests/index.test.ts -t 'should fail - empty name'",
    "test-post-task-fail-no-name": "jest tests/index.test.ts -t 'should fail - no name'",
    "test-post-task-fail-existing-name": "jest tests/index.test.ts -t 'should fail - existing name'",
    "test-post-task-fail-bad-name-type": "jest tests/index.test.ts -t 'should fail - bad name type'",
    "test-post-task-fail-bad-description-type": "jest tests/index.test.ts -t 'should fail - bad description type'",
    "test-post-task-fail-bad-done-type": "jest tests/index.test.ts -t 'should fail - bad done type'",
    "test-delete-tasks": "jest tests/index.test.ts -t 'DELETE /tasks'",
    "test-delete-existing-task": "jest tests/index.test.ts -t 'should delete a task'",
    "test-delete-no-match": "jest tests/index.test.ts -t 'should return 200'",
    "test-put-tasks": "jest tests/index.test.ts -t 'PUT /tasks'",
    "test-put-task-name-only": "jest tests/index.test.ts -t 'should update task with just a name'",
    "test-put-task-name-and-done": "jest tests/index.test.ts -t 'should update task with name and done'",
    "test-put-task-name-and-description": "jest tests/index.test.ts -t 'should update task with name and description'",
    "test-put-task-all-fields": "jest tests/index.test.ts -t 'should update task with all fields'",
    "test-put-task-description-only": "jest tests/index.test.ts -t 'should update task with just description'",
    "test-put-task-isdone-only": "jest tests/index.test.ts -t 'should update task with just isDone'",
    "test-put-task-fail-404": "jest tests/index.test.ts -t 'should fail - 404'",
    "test-put-task-fail-existing-name": "jest tests/index.test.ts -t 'should fail - existing name'",
    "test-put-task-fail-bad-name-type": "jest tests/index.test.ts -t 'should fail - bad name type'",
    "test-put-task-fail-bad-description-type": "jest tests/index.test.ts -t 'should fail - bad description type'",
    "test-put-task-fail-bad-done-type": "jest tests/index.test.ts -t 'should fail - bad done type'"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.13.4",
    "@types/supertest": "^6.0.2",
    "jest": "^29.7.0",
    "mock-stdin": "^1.0.0",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-node": "^10.9.2",
    "typescript": "^5.7.3"
  },
  "dependencies": {
    "express": "^4.21.2",
    "tsconfig-paths": "^4.2.0"
  }
}
