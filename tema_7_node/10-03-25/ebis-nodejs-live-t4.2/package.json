{
  "name": "ebis-nodejs",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "dev": "node -r ts-node/register -r tsconfig-paths/register --watch src/index.ts",
    "test-connection": "node -r ts-node/register -r tsconfig-paths/register db/mongodb.ts --test",
    "format": "prettier --write \"src/**/*.{js,ts,json,css,md}\"",
    "test": "jest",
    "test-get-tasks": "jest tests/index.test.ts -t 'GET /tasks'",
    "test-post-tasks": "jest tests/index.test.ts -t 'POST /tasks'",
    "test-delete-tasks": "jest tests/index.test.ts -t 'DELETE /tasks'",
    "test-put-tasks": "jest tests/index.test.ts -t 'PUT /tasks'",
    "test-get-done-tasks": "jest tests/index.test.ts -t 'GET.*done tasks'",
    "test-get-not-done-tasks": "jest tests/index.test.ts -t 'GET.*not done tasks'",
    "test-get-not-done-bad-string": "jest tests/index.test.ts -t 'GET.*not done bad string'",
    "test-get-no-match": "jest tests/index.test.ts -t 'GET.*no match'",
    "test-get-id-and-done": "jest tests/index.test.ts -t 'GET.*id and done'",
    "test-get-by-name": "jest tests/index.test.ts -t 'GET.*by name'",
    "test-get-by-description": "jest tests/index.test.ts -t 'GET.*by description'",
    "test-get-by-ids": "jest tests/index.test.ts -t 'GET.*by ids'",
    "test-get-indexed-task": "jest tests/index.test.ts -t 'GET.*return only the indexed task'",
    "test-get-404": "jest tests/index.test.ts -t 'GET.*return 404'",
    "test-post-create-just-name": "jest tests/index.test.ts -t 'POST.*create new task with just a name'",
    "test-post-create-name-done": "jest tests/index.test.ts -t 'POST.*create new task with name and done'",
    "test-post-create-name-description": "jest tests/index.test.ts -t 'POST.*create new task with name and description'",
    "test-post-create-all-fields": "jest tests/index.test.ts -t 'POST.*create new task with all fields'",
    "test-post-fail-empty-name": "jest tests/index.test.ts -t 'POST.*fail - empty name'",
    "test-post-fail-no-name": "jest tests/index.test.ts -t 'POST.*fail - no name'",
    "test-post-fail-existing-name": "jest tests/index.test.ts -t 'POST.*fail - existing name'",
    "test-post-fail-bad-name-type": "jest tests/index.test.ts -t 'POST.*fail - bad name type'",
    "test-post-fail-bad-description-type": "jest tests/index.test.ts -t 'POST.*fail - bad description type'",
    "test-post-create-bad-done-type": "jest tests/index.test.ts -t 'POST.*create task despite bad done type'",
    "test-delete-task": "jest tests/index.test.ts -t 'DELETE.*delete a task'",
    "test-delete-200": "jest tests/index.test.ts -t 'DELETE.*return 200'",
    "test-put-update-just-name": "jest tests/index.test.ts -t 'PUT.*update task with just a name'",
    "test-put-update-name-done": "jest tests/index.test.ts -t 'PUT.*update task with name and done'",
    "test-put-update-name-description": "jest tests/index.test.ts -t 'PUT.*update task with name and description'",
    "test-put-update-all-fields": "jest tests/index.test.ts -t 'PUT.*update task with all fields'",
    "test-put-update-just-description": "jest tests/index.test.ts -t 'PUT.*update task with just description'",
    "test-put-update-just-isDone": "jest tests/index.test.ts -t 'PUT.*update task with just isDone'",
    "test-put-fail-404": "jest tests/index.test.ts -t 'PUT.*fail - 404'",
    "test-put-fail-existing-name": "jest tests/index.test.ts -t 'PUT.*fail - existing name'",
    "test-put-fail-bad-name-type": "jest tests/index.test.ts -t 'PUT.*fail - bad name type'",
    "test-put-update-bad-description-type": "jest tests/index.test.ts -t 'PUT.*updates task despite bad description type'",
    "test-put-update-bad-done-type": "jest tests/index.test.ts -t 'PUT.*updates task despite bad done type'"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@types/express": "^5.0.0",
    "@types/jest": "^29.5.14",
    "@types/node": "^22.13.4",
    "@types/supertest": "^6.0.2",
    "jest": "^29.7.0",
    "mock-stdin": "^1.0.0",
    "prettier": "^3.5.2",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-node": "^10.9.2",
    "typescript": "^5.7.3"
  },
  "dependencies": {
    "dotenv": "^16.4.7",
    "express": "^4.21.2",
    "mongodb": "^6.14.0",
    "mongoose": "^8.11.0",
    "tsconfig-paths": "^4.2.0"
  }
}
